{"mappings":"8pBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,uCC2BT,IAAAE,E,6EA5CA,IAAIC,EAAY,GA6BhB,SAASC,EAAWC,GAClB,OAAQ,GAAKA,GAAKC,QAAO,+DAAiE,MAAQ,G,CAcpGJ,EA1CA,SAA4BH,GAC1B,IAAIQ,EAAQJ,EAAUJ,GAOtB,OALKQ,IACHA,EAOJ,WACE,IACE,MAAM,IAAIN,K,CACV,MAAOO,GACP,IAAIC,GAAW,GAAKD,EAAIE,OAAOC,MAAK,yDAEpC,GAAIF,EAGF,OAAOL,EAAWK,EAAQ,G,CAI9B,MAAO,G,CApBGG,GACRT,EAAUJ,GAAMQ,GAGXA,C,KCZTM,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,2JCAzDH,EAAA,S,iCCAA,I,EAAAI,EAAAJ,EAAA,S,uCCAAK,EAAiBL,EAAA,SAAAM,aAA6C,SAAWN,EAAA,SAAAO,QAA6C,S,8BDOtHC,EAAAC,KAAKC,kBAAkBC,iBAAiB,SAIE,SAAnBC,GAErB,GADAA,EAAEC,iBACwB,WAAtBD,EAAEE,OAAOC,SACX,Q,SAU+BC,GAApBC,EAAmBC,MAAAC,KAAAC,U,CANhCC,CAFWT,EAAEE,OAAO5B,G,IAKtB,IAAIoC,EAAmBpB,KAAKC,MAAMoB,aAAaC,QAAQ,qB,SAGxCP,I,OAAAA,EAAfQ,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,EAAmCZ,G,IAE7Ba,EAYEC,E,kEAZFD,EAAU,KAEK,YAAfb,IACFa,EAAUP,EAAiBS,cAGV,UAAff,IACFa,EAAUP,EAAiBU,YAKvBF,EAAYD,EACfI,KACC,SAAAC,G,IACEhD,EAAEgD,EAAFhD,GACAiD,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAASH,EAATG,UACAC,EAAYJ,EAAZI,a,MACI,8DAIJC,OAH4BrD,EAAG,mDAIDqD,OAD9BJ,EAAc,sCAAkDI,OAAZJ,GAAgBV,EAAApB,GACrE,iCAIqBkC,OAJUH,EAAM,qHAQxCG,OAJwBH,EAAM,sFAQPG,QAJvB,EAAAC,EAAAC,kBAAiBJ,IAAa,EAAAG,EAAAC,kBAAiBJ,GAAa,gBAC7D,0CAIAE,OADCD,EAAe,IAAII,KAAKJ,GAAcK,cAAgB,cACvD,kD,IAOEC,KAAK,KAER,EAAAC,EAAAC,eAActC,EAAAC,KAAKsC,aAEnB,EAAAC,EAAAC,WAAUnB,EAAWtB,EAAAC,KAAKsC,Y,4CAnDM7B,MAAAC,KAAAC,U","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-409d628aa47b71c3.js","src/my-library.js","src/js/createLibraryMarkup.js","node_modules/@parcel/runtime-js/lib/runtime-14333c18df06e107.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1B9dp\\\":\\\"my-library.e5523ad9.js\\\",\\\"e5oy7\\\":\\\"filmWrap.dabdf2b2.jpg\\\",\\\"6IIJ4\\\":\\\"my-library.aff6d602.js\\\"}\"));","import './js/btn-anchor';\nimport './js/changeTheme';\nimport './js/modal-team';\nimport './js/modal-authorization';\nimport './js/createLibraryMarkup';\nimport './js/auth-firebase';\nimport './js/modal-film-info';\nimport './js/createModalMarkup';\n","import { refs } from './refs';\nimport { renderFoo } from './renderMarkup';\nimport img from '../images/filmWrap.jpg';\nimport { searchGenresById } from './genresList';\nimport {cleanerMarkup} from './cleanerMarkup';\nlet libBtnId = '';\n\nrefs.libBtnContainerEl.addEventListener('click', onLibBtnClick);\n\n//До выбора списка избранного , отображаем фильмы из watched\n\nfunction onLibBtnClick(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'BUTTON') {\n    return\n  }\n  libBtnId = e.target.id;\n  // console.log('ID c onLibBtnClick :', libBtnId);\n  createLibraryMarkup(libBtnId);\n}\n\nlet localStorageData = JSON.parse(localStorage.getItem('localStorageData'));\n\n\nasync function createLibraryMarkup(onBtnClick) {\n  //получаем список фильмов по запросу\n  let results = null;\n\n  if (onBtnClick === 'watched') {\n    results = localStorageData.watchedFilms;\n  }\n\n  if (onBtnClick === 'queue') {\n    results = localStorageData.queueFilms;\n  }\n\n  // console.log(results);\n  // получаем массив из елементов 'li' , переводим в строку с помощю join\n  const filmCards = results\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        genre_ids,\n        release_date,\n      }) => `<li class=\"film__item\">\n        <a class=\"film__link\" id=\"${id}\">\n  <div class=\"film__wrap\">\n      <img src=${\n        poster_path ? `https://image.tmdb.org/t/p/original${poster_path}` : img\n      } class=\"film-item__img\" alt=\"${title}\" width=\"300\">\n  </div>\n  <div class=\"wrap__film>\n  <div class=\"film__title-wrap\">\n  <h3 class=\"film__title\">${title}</h3>\n  </div>\n  <div class=\"film__genres-and-date\">\n  <p class=\"film__genres\">${\n    searchGenresById(genre_ids) ? searchGenresById(genre_ids) : 'Unknown genre'\n  }</p>\n  <p class=\"film__release-date\">${\n    //проверяем через тернарник\n    release_date ? new Date(release_date).getFullYear() : 'Nobody know'\n  }</p>\n\n   </div>\n   </div>\n   </a>\n   </li>`\n    )\n    .join('');\n\n  cleanerMarkup(refs.cardListEl);\n  // возвращаем строку\n  renderFoo(filmCards, refs.cardListEl);\n\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('1B9dp') + require('./helpers/bundle-manifest').resolve(\"e5oy7\");"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","parcelRequire","register","JSON","parse","$bpxeT","$5516caae7768dbbc$exports","getBundleURL","resolve","$4Nugj","refs","libBtnContainerEl","addEventListener","e","preventDefault","target","nodeName","onBtnClick","$4ebc00d643d685e6$var$_createLibraryMarkup","apply","this","arguments","$4ebc00d643d685e6$var$createLibraryMarkup","$4ebc00d643d685e6$var$localStorageData","localStorage","getItem","$parcel$interopDefault","$2TvXO","mark","_callee","results","filmCards","watchedFilms","queueFilms","map","param","poster_path","title","genre_ids","release_date","concat","$awCm4","searchGenresById","Date","getFullYear","join","$6jzso","cleanerMarkup","cardListEl","$5118m","renderFoo"],"version":3,"file":"my-library.e5523ad9.js.map"}